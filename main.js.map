{"version":3,"file":"main.js","mappings":"mBAKaA,SAASC,cAAc,QAApC,MACMC,EAAQF,SAASC,cAAc,SAqBnCD,SAASG,iBAAiB,SAR5B,SAAwBC,GAClBA,EAAEC,OAAOC,QAAQ,iBACnBF,EAAEG,iBAbNC,eAAsCC,GACpC,MAAMC,QCWDF,eAAyCG,GAC9C,MAAMC,QAAiBD,EAQvB,MAPiB,CACfE,KAAMD,EAASE,SAASD,KACxBE,QAASH,EAASE,SAASC,QAC3BC,OAAQJ,EAASK,QAAQD,OACzBE,OAAQN,EAASK,QAAQC,OACzBC,UAAWP,EAASK,QAAQE,UAAUC,KAG1C,CDrBmCC,CCP5Bb,eAAqCc,GAC1C,MAAMC,QAAwBC,MAC5B,kFAAkFF,WAClF,CAAEG,KAAM,SAGV,aADiCF,EAAgBG,MAEnD,CDCIC,CAAsBlB,IAExBmB,QAAQC,IAAInB,GACZ,MAAMoB,QCmBDtB,eAA0CG,GAC/C,MAAMC,QAAiBD,EACjBoB,EAAW,GAajB,OAZAnB,EAASoB,SAASC,YAAYC,SAASC,IACrCJ,EAASK,KAAK,CACZvB,KAAMD,EAASE,SAASD,KACxBE,QAASH,EAASE,SAASC,QAC3BsB,KAAMF,EAAIE,KACVC,UAAWH,EAAIA,IAAIG,UACnBC,UAAWJ,EAAIA,IAAII,UACnBC,UAAWL,EAAIA,IAAIK,UACnBC,UAAWN,EAAIA,IAAIM,UACnBtB,UAAWgB,EAAIA,IAAIhB,UAAUC,MAC7B,IAEGW,CACT,CDnCoCW,CCF7BlC,eAAsCc,GAC3C,MAAMqB,QAAyBnB,MAC7B,mFAAmFF,4BACnF,CAAEG,KAAM,SAGV,aADkCkB,EAAiBjB,MAErD,CDJIkB,CAAuBnC,IAEzBmB,QAAQC,IAAIC,EACd,CAMIe,CADiB3C,EAAM4C,OAG3B,G","sources":["webpack://weather-app/./src/logic/controller.js","webpack://weather-app/./src/logic/weatherdata.js"],"sourcesContent":["import { getCurrentWeatherData } from \"./weatherdata\";\nimport { getForecastWeatherData } from \"./weatherdata\";\nimport { processCurrentWeatherData } from \"./weatherdata\";\nimport { processForecastWeatherData } from \"./weatherdata\";\n\nconst form = document.querySelector(\"form\");\nconst input = document.querySelector(\"input\");\n\nasync function retrieveAllWeatherData(searchValue) {\n  const currentWeatherData = await processCurrentWeatherData(\n    getCurrentWeatherData(searchValue),\n  );\n  console.log(currentWeatherData);\n  const forecastWeatherData = await processForecastWeatherData(\n    getForecastWeatherData(searchValue),\n  );\n  console.log(forecastWeatherData);\n}\n\nfunction getSearchValue(e) {\n  if (e.target.matches(\"#search-btn\")) {\n    e.preventDefault();\n    const toSearch = input.value;\n    retrieveAllWeatherData(toSearch);\n  }\n}\nexport default function loadSearchListener() {\n  document.addEventListener(\"click\", getSearchValue);\n}\n","// functions that can take a location and return the weather data for that location\n\nexport async function getCurrentWeatherData(search) {\n  const currentResponse = await fetch(\n    `http://api.weatherapi.com/v1/current.json?key=e27d0611824649cba3880002231612&q=${search}&aqi=no`,\n    { mode: \"cors\" },\n  );\n  const currentWeatherData = await currentResponse.json();\n  return currentWeatherData;\n}\n\nexport async function getForecastWeatherData(search) {\n  const forecastResponse = await fetch(\n    `http://api.weatherapi.com/v1/forecast.json?key=e27d0611824649cba3880002231612&q=${search}&days=3&aqi=no&alerts=no`,\n    { mode: \"cors\" },\n  );\n  const forecastWeatherData = await forecastResponse.json();\n  return forecastWeatherData;\n}\n\nexport async function processCurrentWeatherData(weatherData) {\n  const toFilter = await weatherData;\n  const filtered = {\n    name: toFilter.location.name,\n    country: toFilter.location.country,\n    temp_c: toFilter.current.temp_c,\n    temp_f: toFilter.current.temp_f,\n    condition: toFilter.current.condition.text,\n  };\n  return filtered;\n}\n\nexport async function processForecastWeatherData(weatherData) {\n  const toFilter = await weatherData;\n  const filtered = [];\n  toFilter.forecast.forecastday.forEach((day) => {\n    filtered.push({\n      name: toFilter.location.name,\n      country: toFilter.location.country,\n      date: day.date,\n      maxtemp_c: day.day.maxtemp_c,\n      maxtemp_f: day.day.maxtemp_f,\n      mintemp_c: day.day.mintemp_c,\n      mintemp_f: day.day.mintemp_f,\n      condition: day.day.condition.text,\n    });\n  });\n  return filtered;\n}\n"],"names":["document","querySelector","input","addEventListener","e","target","matches","preventDefault","async","searchValue","currentWeatherData","weatherData","toFilter","name","location","country","temp_c","current","temp_f","condition","text","processCurrentWeatherData","search","currentResponse","fetch","mode","json","getCurrentWeatherData","console","log","forecastWeatherData","filtered","forecast","forecastday","forEach","day","push","date","maxtemp_c","maxtemp_f","mintemp_c","mintemp_f","processForecastWeatherData","forecastResponse","getForecastWeatherData","retrieveAllWeatherData","value"],"sourceRoot":""}